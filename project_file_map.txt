# Text Generator BNF Library - Project File Map

## Active Project Files

### Core Library Files (src/)
```
src/
├── types.ts                 # Core type definitions, interfaces, error classes
├── ast/
│   └── nodes.ts            # AST node class definitions
├── parser/
│   ├── lexer.ts            # Tokenization logic
│   └── parser.ts           # Recursive descent parser
├── generator.ts            # Main Generator API class
└── index.ts               # Public exports and usage examples
```

### Configuration Files
```
package.json               # NPM package configuration with Jest setup
tsconfig.json             # TypeScript compiler configuration
```

### Test Files
```
test/
└── generator.test.ts      # Jest-based comprehensive test suite
```

### Documentation
```
README.md                 # Library documentation with usage examples
```

## Files We Should Remove/Archive

### Deprecated Files (Not Currently Used)
- `test/framework.ts` - Custom test framework (replaced with Jest)
- `test/run-tests.ts` - Custom test runner (replaced with Jest)

## Files to Add

### Demo/Example Files
- `demo.html` - Simple browser demo for testing the library
- `dist/` - Compiled JavaScript output (generated by `npm run build`)

## Current File Dependencies

```
index.ts
├── generator.ts
│   ├── parser/parser.ts
│   │   ├── parser/lexer.ts
│   │   │   └── types.ts
│   │   └── ast/nodes.ts
│   │       └── types.ts
│   └── types.ts
└── types.ts

generator.test.ts
├── index.ts (imports Generator, WeightedItem)
└── types.ts (imports error classes)
```

## Build Output Structure (after npm run build)
```
dist/
├── index.js              # Compiled main entry point
├── index.d.ts            # TypeScript declarations
├── generator.js          # Compiled generator
├── generator.d.ts        # Generator type declarations
├── types.js              # Compiled types
├── types.d.ts            # Type declarations
├── ast/
│   ├── nodes.js          # Compiled AST nodes
│   └── nodes.d.ts        # AST type declarations
└── parser/
    ├── lexer.js          # Compiled lexer
    ├── lexer.d.ts        # Lexer type declarations
    ├── parser.js         # Compiled parser
    └── parser.d.ts       # Parser type declarations
```

## NPM Scripts
- `npm run build` - Compile TypeScript to JavaScript
- `npm test` - Run Jest test suite
- `npm run test:watch` - Run tests in watch mode
- `npm run test:coverage` - Generate coverage report
- `npm run dev` - Watch mode compilation
- `npm run clean` - Remove dist directory